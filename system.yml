- name: Base Linux configuration
  hosts: 127.0.0.1
  connection: local

  vars:
    microsoft_gpg_key_path: /usr/share/keyrings/microsoft-archive-keyring.gpg

  tasks:
    # cpu architecture
    - name: Get CPU architecture
      shell: dpkg --print-architecture
      register: dpkg_architecture_command
      changed_when: false

    - name: Store CPU architecture
      set_fact:
        dpkg_architecture: "{{ dpkg_architecture_command.stdout }}"

    # base packages
    - name: Install base packages
      apt:
        name:
          - aptitude
          - apt-file
          - apt-transport-https
          - bat
          - build-essential
          - ca-certificates
          - cmake
          - curl
          - fd-find
          - fzf
          - git
          - gnupg2
          - httpie
          - jq
          - neovim
          - ncat
          - net-tools
          - pipx
          - python3-pip
          - ripgrep
          - software-properties-common
          - tree
          - unzip
          - wget
          - zip
        state: latest
        force: yes
        update_cache: yes

    - name: Copy OS config files
      ansible.builtin.copy:
        src: files/etc/
        dest: /etc/

    # aws cli
    - name: Install aws cli
      shell: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        ./aws/install
        rm -rf aws awscliv2.zip
      args:
        creates: /usr/local/bin/aws

    # dotnet core
    - name: Download microsoft apt key
      ansible.builtin.get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc
        dest: "{{ microsoft_gpg_key_path }}.key"

    - name: Unarmour microsoft apt key
      ansible.builtin.shell: |
        cat {{ microsoft_gpg_key_path }}.key | gpg --dearmor > {{ microsoft_gpg_key_path }}
      args:
        creates: "{{ microsoft_gpg_key_path }}"

    - name: Add microsoft apt repository
      apt_repository:
        repo: "deb [arch={{ dpkg_architecture }} signed-by={{ microsoft_gpg_key_path }}] https://packages.microsoft.com/repos/microsoft-ubuntu-{{ ansible_facts['distribution_release'] }}-prod {{ ansible_facts['distribution_release'] }} main"
        filename: microsoft
        state: present
        update_cache: yes

    - name: Install .NET tooling
      apt:
        name:
          - dotnet-sdk-8.0
        state: latest

    # gh (GitHub cli)
    - name: Check latest gh version
      shell: curl -s https://api.github.com/repos/cli/cli/releases/latest | jq -r .html_url
      register: gh_latest_version
      changed_when: false

    - name: Check current gh version
      shell: gh --version | grep /tag/ || true
      register: gh_current_version
      changed_when: false

    - name: Install gh
      when: gh_latest_version.stdout != gh_current_version.stdout
      shell: |
        DOWNLOAD_URL=$( \
          curl -s https://api.github.com/repos/cli/cli/releases/latest \
          | jq -r '.assets[].browser_download_url' \
          | grep "gh_.*_linux_amd64\\.deb" \
        )
        FILE_NAME=$(basename ${DOWNLOAD_URL})

        curl -O -L ${DOWNLOAD_URL}
        apt install ./${FILE_NAME}
        rm -rf ${FILE_NAME}

    # oh-my-posh
    - name: Install oh-my-posh
      ansible.builtin.get_url:
        url: https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64
        dest: /usr/local/bin/oh-my-posh
        mode: "0755"

    # cleanup
    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes
